version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: os-manager-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-osmongo123}
      MONGO_INITDB_DATABASE: os_manager
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - os-manager-network

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: os-manager-backend
    restart: unless-stopped
    environment:
      MONGO_URL: mongodb://admin:${MONGO_PASSWORD:-osmongo123}@mongodb:27017/os_manager?authSource=admin
      DB_NAME: os_manager
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-change-this-in-production}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000,http://localhost}
    ports:
      - "8001:8001"
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app/backend
    networks:
      - os-manager-network

  # React Frontend  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: os-manager-frontend
    restart: unless-stopped
    environment:
      REACT_APP_BACKEND_URL: ${REACT_APP_BACKEND_URL:-http://localhost:8001}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    networks:
      - os-manager-network

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: os-manager-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - os-manager-network
    profiles:
      - production

volumes:
  mongodb_data:

networks:
  os-manager-network:
    driver: bridge